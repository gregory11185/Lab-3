/*
 * @author Gregory Eganovi
 * @since 10/04/2020
 * @version 1.0
 * 
 * Description: 7 Project Euler problems solved with description and code using C# language.
 */




using System;
using System.ComponentModel;
using System.Threading;
using System.Xml.Schema;

namespace Simple_App
{
	class Program
	{
		static void Main(string[] args)
		{
			// Problem 1: If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
			// Find the sum of all the multiples of 3 or 5 below 1000.
			int max = 1000;
			int sumofmultiple = 0;

			for (int i = 0; i < max; i++)
			{
				if (i % 3 == 0 || i % 5 == 0)
				{
					sumofmultiple += i;
				}
			}
			Console.WriteLine("Answer to problem 1: ");
			Console.WriteLine(sumofmultiple);


			//Problem 2: Each new term in the Fibonacci sequence is generated by adding the previous two terms.By starting with 1 and 2, the first 10 terms will be:
			//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
			//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

			int max2 = 4000000;
			int firstnum = 0;
			int secondnum = 1;
			int result = 0;
			int evensum = 0;

			while (result <= max2)
			{
				result = firstnum + secondnum;
				//Console.WriteLine(result);
				if (result <= max2)
				{
					if (result % 2 == 0)
					{
						evensum += result;
					}
					firstnum = secondnum;
					secondnum = result;
				}
			}
			Console.WriteLine();
			Console.WriteLine("Answer to problem 2: ");
			Console.WriteLine(evensum);


			//Problem 6: The sum of the squares of the first ten natural numbers is, (1^2 + 2^2 + 3^2 + 4^2... + 10^2) = 385
			//The square of the sum of the first ten natural numbers is, (1+2+3+4+5+6+7+8+9+10)^2 = 3025
			//Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is 3025 - 385 = 2640
			//Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum.
			int sumofsquares = 0;
			int squareofsums = 0;
			int difference;
			for (int i = 1; i <= 100; i++)
			{
				sumofsquares += i * i;
			}
			//Console.WriteLine(sumofsquares);

			for (int i = 1; i <= 100; i++)
			{
				squareofsums += i;
			}
			squareofsums = squareofsums * squareofsums;
			//Console.WriteLine(squareofsums);
			difference = squareofsums - sumofsquares;
			Console.WriteLine();
			Console.WriteLine("Answer to problem 6: ");
			Console.WriteLine(difference);


			//Problem 16: 2^15 = 32768 and the sum of its digits is 3 + 2 + 7 + 6 + 8 = 26.
			//What is the sum of the digits of the number 2^1000 ?

			double number = 2;
			double power = 1000;
			double total = Math.Pow(number, power);
			double k;
			double sum = 0;

			//Console.WriteLine(total);

			while (total != 0)
			{
				k = total % 10;
				total = Math.Floor(total / 10);
				sum += k;
			}
			Console.WriteLine();
			Console.WriteLine("Answer to problem 16: ");
			Console.WriteLine(sum);


			//Problem 10: The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17.
			//Find the sum of all the primes below two million.

			/*int n = 10;
			int a;
			a = 0;
			for (int i = 1; i <= n; i++)
			{
				if (n % i == 0)
				{
					a++;
				}
			}
			if (a == 2)
			{
				Console.WriteLine("Prime Number");
			}
			else
			{
				Console.WriteLine("Not a Prime Number");
			}
			Console.ReadLine();
			*/


			// problem 20: n! means n × (n − 1) × ... × 3 × 2 × 1
			//For example, 10! = 10 × 9 × ... × 3 × 2 × 1 = 3628800,
			//and the sum of the digits in the number 10! is 3 + 6 + 2 + 8 + 8 + 0 + 0 = 27.
			//Find the sum of the digits in the number 100!

			double factorial = 100;
			double num = 1;
			double sumofdigits = 0;
			double temp;
			
			while (factorial != 1)
			{
				num *= factorial;
				factorial--;
			}

			while (num != 0)
			{
				temp = num % 10;
				num = Math.Floor(num / 10);
				sumofdigits += temp;
			}
			Console.WriteLine();
			Console.WriteLine("Answer to problem 20: ");
			Console.WriteLine(sumofdigits);


			//Problem 25: The Fibonacci sequence is defined by the recurrence relation:

			//Fn = Fn−1 + Fn−2, where F1 = 1 and F2 = 1.
			//Hence the first 12 terms will be:

			//F1 = 1
			//F2 = 1
			//F3 = 2
			//F4 = 3
			//F5 = 5
			//F6 = 8
			//F7 = 13
			//F8 = 21
			//F9 = 34
			//F10 = 55
			//F11 = 89
			//F12 = 144
			//The 12th term, F12, is the first term to contain three digits.

			//What is the index of the first term in the Fibonacci sequence to contain 1000 digits ?

			//Problem 4: A palindromic number reads the same both ways. The largest palindrome made from the product of two 2 - digit numbers is 9009 = 91 × 99.
			//Find the largest palindrome made from the product of two 3 - digit numbers

			int reverse = 0;
			int multiplied;
			int palindrome = 0;
			int value;

			for (int i = 1; i <= 999; i++)
            {
				for(int j = 1; j <= 999; j++)
                {
					multiplied = i * j;
					int mult = multiplied;
                    while (multiplied != 0)
					{
						value = multiplied % 10;
						reverse = (reverse * 10) + value;
						multiplied = multiplied / 10;
					}
					if (reverse == mult)
                    {
						if(palindrome < reverse)
                        {
							palindrome = reverse;
						}
                    }
					reverse = 0;
				}
            }
			Console.WriteLine();
			Console.WriteLine("Answer to problem 4: ");
			Console.WriteLine(palindrome);
			

		}
	}
}